name: Deploy All Services to GKE

on:
  push:
    branches:
      - main

jobs:
  build-client:
    uses: ./.github/workflows/build-client.yaml
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  build-server:
    uses: ./.github/workflows/build-server.yaml
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  build-worker:
    uses: ./.github/workflows/build-worker.yaml
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    needs: [build-client, build-server, build-worker]
    env:
      SERVER_IMAGE_TAG : ${{ needs.build-server.outputs.COMMIT_TAG }}
      CLIENT_IMAGE_TAG : ${{ needs.build-client.outputs.COMMIT_TAG }}
      WORKER_IMAGE_TAG : ${{ needs.build-worker.outputs.COMMIT_TAG }}

    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v4

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Get GKE credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER }}
          location: ${{ secrets.GCP_ZONE }}
          project_id: ${{ secrets.GCP_PROJECT }}

      - name: Deploy to GKE
        run: |
          kubectl apply -f k8s -R
          kubectl set image deployment/server-deployment server=iadebisi/multi-server
          # kubectl set image deployment/server-deployment server=iadebisi/multi-server:${{ env.SERVER_IMAGE_TAG }}
          kubectl set image deployment/client-deployment client=iadebisi/multi-client
          # kubectl set image deployment/client-deployment client=iadebisi/multi-client:${{ env.CLIENT_IMAGE_TAG }}
          kubectl set image deployment/worker-deployment worker=iadebisi/multi-worker
          # kubectl set image deployment/worker-deployment worker=iadebisi/multi-worker:${{ env.WORKER_IMAGE_TAG }}
          kubectl rollout status deployment server-deployment || exit 1
          kubectl rollout status deployment client-deployment || exit 1
          kubectl rollout status deployment worker-deployment || exit 1

      - name: Wait for Deployment Rollout
        run: |
          kubectl rollout status deployment/worker-deployment --timeout=120s
          kubectl rollout status deployment/server-deployment --timeout=120s
          kubectl rollout status deployment/client-deployment --timeout=120s
